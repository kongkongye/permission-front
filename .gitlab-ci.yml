# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: wxshop-jenkins.kongkongye.com:1111/wx-ubuntu

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build:
  stage: build
  image: wxshop-jenkins.kongkongye.com:1111/node:18
  tags:
    - default
  before_script:
    - npm config set registry https://registry.npmmirror.com/
    - npm i -g pnpm
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm i
    - pnpm run build
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
  artifacts:
    paths:
      - dist

#推送到另外的仓库
push:
  stage: build
  image: wxshop-jenkins.kongkongye.com:1111/bitnami/git
  resource_group: push-resource-group
  tags:
    - default
  before_script:
    - mkdir ~/.ssh/
    - echo "${CI_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - echo "${SSH_PUSH_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    - git remote remove wx || true
    - git remote add wx git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
  script:
    - git push wx HEAD:refs/heads/master

#部署到生产环境
deploy:
  stage: deploy
  tags:
    - default
  before_script:
    - apt-get update -y
    - apt-get install -y sshpass
  script:
    - sshpass -p "$DEPLOY_PROD_PASSWORD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ./dist/* $DEPLOY_PROD_USER@$DEPLOY_PROD_HOST:$DEPLOY_PROD_PATH
    - sshpass -p "$DEPLOY_PROD_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${DEPLOY_PROD_USER}@${DEPLOY_PROD_HOST} 'bash -s < /opt/permission/start.sh'
